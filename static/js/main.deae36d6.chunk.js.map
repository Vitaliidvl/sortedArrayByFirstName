{"version":3,"sources":["components/EmployeeBirthday.jsx","services/utils.js","components/BirthdayList.jsx","components/Employee.jsx","components/EmployeesList.jsx","App.js","services/api.js","index.js"],"names":["EmployeeBirthday","employee","birthday","Date","dob","birthdayString","getDate","toLocaleString","month","getFullYear","className","lastName","firstName","alphabet","monthNames","firstNameSort","a","b","localeCompare","getItemsFromLocalStorage","key","defaultValue","localStorage","getItem","JSON","parse","BirthdayList","sortedSelectedEmployees","obj","employeeBirthMonth","Object","keys","sort","prevMonths","filter","pastMonths","reduce","acc","item","sortByMonth","selectedEmployees","length","entries","map","idx","items","id","Employee","addEmployee","removeEmployee","useState","active","setActive","useEffect","setItem","removeItem","type","name","value","checked","onChange","htmlFor","EmployeesList","employees","addSelectedEmployee","removeSelectedEmployee","letter","App","setEmployees","setSelectedEmployees","loading","setLoading","error","setError","axios","get","then","employeesArr","data","firstLetter","slice","push","getSortedEmployees","catch","orderedValues","getMonth","stringify","arr","sortSelectedEmployees","updatedEmployees","newObj","forEach","removeEmptyKeys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.deae36d6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const EmployeeBirthday = ({ employee }) => {\n  const birthday = new Date(employee.dob);\n  const birthdayString = `${birthday.getDate()} ${birthday.toLocaleString(\"en-GB\", {\n    month: \"long\"\n  })}, ${birthday.getFullYear()} year`;\n\n  return (\n    <li className=\"employees-birthday__list-item\">\n      {employee.lastName} {employee.firstName} - {birthdayString}\n    </li>\n  );\n};\n\nEmployeeBirthday.propTypes = {\n  employee: PropTypes.object.isRequired\n};\n","export const alphabet = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\"\n];\n\nconst monthNames = [\n  \"November\",\n  \"December\",\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\"\n];\n\nexport const firstNameSort = (a, b) => a.firstName.localeCompare(b.firstName);\n\nexport const getItemsFromLocalStorage = (key, defaultValue = {}) => {\n  return localStorage.getItem(key) ? JSON.parse(localStorage.getItem(key)) : defaultValue;\n};\n\nexport const removeEmptyKeys = (obj) => {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (obj[key].length) {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n};\n\nexport const sortByMonth = (obj) => {\n  const november = 11;\n  const employeeBirthMonth = Object.keys(obj).sort((a, b) => a - b);\n  const prevMonths = employeeBirthMonth.filter((month) => +month < +november);\n  const pastMonths = employeeBirthMonth.filter((month) => +month >= +november);\n\n  const result = [...pastMonths, ...prevMonths].reduce((acc, item) => {\n    const month = monthNames[item];\n    acc[month] = obj[item] || [];\n    return acc;\n  }, {});\n  return result;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { EmployeeBirthday } from \"./EmployeeBirthday\";\nimport { sortByMonth } from \"../services/utils\";\n\nexport const BirthdayList = ({ selectedEmployees }) => {\n  const sortedSelectedEmployees = sortByMonth(selectedEmployees);\n  return (\n    <section className=\"employees-birthday\">\n      <h2 className=\"employees-birthday__title\">Employees birthday</h2>\n      <div className=\"employees-birthday__wrapper\">\n        {Object.keys(sortedSelectedEmployees).length > 0 ? (\n          Object.entries(sortedSelectedEmployees).map((employee, idx) => {\n            const [month, items] = employee;\n            return (\n              <section key={idx}>\n                {sortedSelectedEmployees[month].length > 0 && <h4>{month}</h4>}\n                <ul className=\"employees-birthday__list\">\n                  {items && items.map((item) => <EmployeeBirthday key={item.id} employee={item} />)}\n                </ul>\n              </section>\n            );\n          })\n        ) : (\n          <h3>Employees List is empty</h3>\n        )}\n      </div>\n    </section>\n  );\n};\n\nBirthdayList.propTypes = {\n  selectedEmployees: PropTypes.object.isRequired\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { getItemsFromLocalStorage } from \"../services/utils\";\n\nexport const Employee = ({ employee, addEmployee, removeEmployee }) => {\n  const [active, setActive] = useState(getItemsFromLocalStorage(employee.id, false));\n\n  useEffect(() => {\n    if (active) {\n      localStorage.setItem(employee.id, true);\n    } else {\n      localStorage.removeItem(employee.id);\n    }\n  }, [active, employee.id]);\n\n  return (\n    <div className=\"employee-content\">\n      <h4 className={`employee-name ${active ? \"active\" : \"\"}`}>\n        {employee.firstName} {employee.lastName}\n      </h4>\n      <div className=\"btn-group\">\n        <div className=\"not-active-wrapper\">\n          <input\n            type=\"radio\"\n            name={employee.firstName}\n            id={`${employee.id}-not-active`}\n            value={false}\n            checked={!active}\n            onChange={() => {\n              setActive(false);\n              removeEmployee(employee);\n            }}\n          />\n          <label htmlFor={`${employee.id}-not-active`}>not active</label>\n        </div>\n        <div className=\"active-wrapper\">\n          <input\n            type=\"radio\"\n            name={employee.firstName}\n            id={`${employee.id}-active`}\n            value={true}\n            checked={active}\n            onChange={() => {\n              setActive(true);\n              addEmployee(employee);\n            }}\n          />\n          <label htmlFor={`${employee.id}-active`}>active</label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEmployee.propTypes = {\n  employee: PropTypes.object.isRequired,\n  addEmployee: PropTypes.func.isRequired,\n  removeEmployee: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Employee } from \"./Employee\";\n\nexport const EmployeesList = ({ employees, addSelectedEmployee, removeSelectedEmployee }) => {\n  return (\n    <section className=\"employees\">\n      <h2 className=\"employees-title\">Employees</h2>\n      <div className=\"employees-wrapper\">\n        {Object.entries(employees).map((employee, idx) => {\n          const [letter, items] = employee;\n          return (\n            <div key={idx} className=\"employee-wrapper\">\n              <h3>{letter}</h3>\n              {items.length > 0\n                ? items.map((item) => (\n                    <Employee\n                      key={item.id}\n                      employee={item}\n                      addEmployee={addSelectedEmployee}\n                      removeEmployee={removeSelectedEmployee}\n                    />\n                  ))\n                : \"No Employees\"}\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nEmployeesList.propTypes = {\n  employees: PropTypes.object.isRequired,\n  addSelectedEmployee: PropTypes.func.isRequired,\n  removeSelectedEmployee: PropTypes.func.isRequired\n};\n","import React, { useEffect, useState } from \"react\";\nimport { getEmployees } from \"./services/api\";\nimport { BirthdayList } from \"./components/BirthdayList\";\nimport { EmployeesList } from \"./components/EmployeesList\";\nimport {\n  alphabet,\n  firstNameSort,\n  getItemsFromLocalStorage,\n  removeEmptyKeys\n} from \"./services/utils\";\n\nexport const App = () => {\n  const [employees, setEmployees] = useState({});\n  const [selectedEmployees, setSelectedEmployees] = useState(\n    getItemsFromLocalStorage(\"selectedEmployees\")\n  );\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    getEmployees()\n      .then(({ data }) => {\n        const employeesArr = data.reduce((acc, item) => {\n          const firstLetter = item.firstName.slice(0, 1);\n          if (acc[firstLetter]) {\n            acc[firstLetter].push(item);\n          } else {\n            acc[firstLetter] = [item];\n          }\n          return acc;\n        }, {});\n        setEmployees(getSortedEmployees(employeesArr));\n        setLoading(false);\n      })\n      .catch(() => {\n        setError(true);\n      });\n  }, []);\n\n  const getSortedEmployees = (employees) => {\n    const orderedValues = Object.entries(employees).reduce((acc, item) => {\n      const values = item[1];\n      values.sort(firstNameSort);\n      return acc;\n    }, employees);\n\n    const result = alphabet.sort().reduce((acc, item) => {\n      acc[item] = orderedValues[item] || [];\n      return acc;\n    }, {});\n\n    return result;\n  };\n\n  const sortSelectedEmployees = (arr, employee) => {\n    const newArr = [...arr, employee];\n    return newArr.sort(firstNameSort);\n  };\n\n  const addSelectedEmployee = (employee) => {\n    const month = new Date(employee.dob).getMonth();\n    const selectedEmployees = getItemsFromLocalStorage(\"selectedEmployees\");\n    if (selectedEmployees[month]) {\n      localStorage.setItem(\n        \"selectedEmployees\",\n        JSON.stringify({\n          ...selectedEmployees,\n          [month]: sortSelectedEmployees(selectedEmployees[month], employee)\n        })\n      );\n    } else {\n      localStorage.setItem(\n        \"selectedEmployees\",\n        JSON.stringify({\n          ...selectedEmployees,\n          [month]: [employee]\n        })\n      );\n    }\n    setSelectedEmployees(getItemsFromLocalStorage(\"selectedEmployees\"));\n  };\n\n  const removeSelectedEmployee = (employee) => {\n    const month = new Date(employee.dob).getMonth();\n    const selectedEmployees = getItemsFromLocalStorage(\"selectedEmployees\");\n    const updatedEmployees = {\n      ...selectedEmployees,\n      [month]: selectedEmployees[month].filter((item) => item.id !== employee.id)\n    };\n    localStorage.setItem(\"selectedEmployees\", JSON.stringify(removeEmptyKeys(updatedEmployees)));\n    setSelectedEmployees(getItemsFromLocalStorage(\"selectedEmployees\"));\n  };\n  if (error) {\n    return <h1>Failed to fetch data</h1>;\n  }\n\n  return (\n    <div className=\"app\">\n      {loading && <h3>Loading...</h3>}\n      {!loading && (\n        <>\n          <EmployeesList\n            employees={employees}\n            addSelectedEmployee={addSelectedEmployee}\n            removeSelectedEmployee={removeSelectedEmployee}\n          />\n          <BirthdayList selectedEmployees={selectedEmployees} />\n        </>\n      )}\n    </div>\n  );\n};\n","import axios from \"axios\";\n\nconst URL = `https://yalantis-react-school-api.yalantis.com/api/task0/users`;\nexport const getEmployees = () => axios.get(URL);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}